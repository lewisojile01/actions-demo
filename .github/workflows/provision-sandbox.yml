name: 'Provision Sandbox'

on:
  pull_request:
    branches:
      - master
      - main
    types: [closed, synchronize, opened]

env:
  OWNER: ${{ github.event.pull_request.user.login }}
  REGION: us-east-1

jobs:
  cleanup-stacks:
    if: ${{ github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name,'sandbox') }}
    name: 'Cleanup Env Stacks'
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        srvs: ['demo-service']

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SANDBOX_ENV_LABEL: ${{ secrets.SANDBOX_ENV_LABEL }}
      ENV_TYPE: nonproduction

    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v3
      - name: 'Remove Sandbox Environment : ${{ matrix.srvs }}'
        if: ${{ contains(github.event.pull_request.labels.*.name,'sandbox') }}
        run: |
          echo "this should clean up ${{ matrix.srvs }} environment"

  prepare-env:
    if: ${{ contains(github.event.pull_request.labels.*.name,'sandbox') && github.event.pull_request.merged == false }}
    name: 'Prepare Sandbox'
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2

      - name: Set matrix
        id: set-matrix
        run: |
          matrix=`echo "output from prepare-env job"`
          echo "::set-output name=matrix::$(echo $matrix)"
          echo "this should prepare a new environment"

  deploy-sandbox:
    if: ${{ contains(github.event.pull_request.labels.*.name,'sandbox') }}
    name: 'Deploy Sandbox'
    runs-on: ubuntu-latest
    needs: [prepare-env]

    env:
      ENV_TYPE: nonproduction

    defaults:
      run:
        working-directory: .

    steps:
      - uses: actions/checkout@v2
      # - name: Configure AWS Credentials (NonProd)
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.CENTRAL_AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.CENTRAL_AWS_SECRET_ACCESS_KEY }}
      #     aws-region: us-east-1
      #     role-to-assume: ${{ secrets.NONPROD_ROLE_ARN }}
      #     role-skip-session-tagging: true
      #     role-duration-seconds: 900
      #     mask-aws-account-id: false

      - name: Deploy with IaC
        run: |
          echo "This step deploys sandbox with IaC"

  call-reusable-workflow:
    if: ${{ contains(github.event.pull_request.labels.*.name,'sandbox') }}
    uses: ./.github/workflows/sandbox-reuseable.yml
    with:
      username: Lewis